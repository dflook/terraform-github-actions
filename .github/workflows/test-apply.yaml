name: Test terraform-apply

on: [pull_request]

jobs:
  auto_approve:
    runs-on: ubuntu-latest
    name: Auto Approve
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/remote-state/test-bucket_12
          auto_approve: true

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.my_string }}" != "hello" ]]; then
            echo "::error:: output my_string not set correctly"
            exit 1
          fi

  apply_error:
    runs-on: ubuntu-latest
    name: Auto Approve plan error
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Apply
        uses: ./terraform-apply
        id: apply
        continue-on-error: true
        with:
          path: tests/remote-state/test-bucket_12
          auto_approve: true

      - name: Check failed to apply
        run: |
          if [[ "${{ steps.apply.outcome }}" != "failure" ]]; then
            echo "Apply did not fail correctly"
            exit 1
          fi

  apply_no_token:
    runs-on: ubuntu-latest
    name: Apply without token
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Apply
        uses: ./terraform-apply
        id: apply
        continue-on-error: true
        with:
          path: tests/apply/changes

      - name: Check failed to apply
        run: |
          if [[ "${{ steps.apply.outcome }}" != "failure" ]]; then
            echo "Apply did not fail correctly"
            exit 1
          fi

  apply:
    runs-on: ubuntu-latest
    name: Apply approved changes
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/apply/changes

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/apply/changes

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.output_string }}" != "the_string" ]]; then
            echo "::error:: output s not set correctly"
            exit 1
          fi

  apply_vars:
    runs-on: ubuntu-latest
    name: Apply approved changes with a variable
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/apply/vars
          var: my_var=hello
          var_file: tests/apply/test.tfvars

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/apply/vars
          var: my_var=hello
          var_file: tests/apply/test.tfvars

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.output_string }}" != "the_string" ]]; then
            echo "::error:: output s not set correctly"
            exit 1
          fi

          if [[ "${{ steps.output.outputs.from_var }}" != "hello" ]]; then
            echo "::error:: output from_var not set correctly"
            exit 1
          fi

          if [[ "${{ steps.output.outputs.from_varfile }}" != "monkey" ]]; then
            echo "::error:: output from_varfile not set correctly"
            exit 1
          fi

  backend_config_12:
    runs-on: ubuntu-latest
    name: backend_config & backed_config_vars
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/apply/backend_config_12
          backend_config_file: tests/apply/backend_config_12/backend_config

      - name: Apply
        uses: ./terraform-apply
        id: backend_config_file_12
        with:
          path: tests/apply/backend_config_12
          backend_config_file: tests/apply/backend_config_12/backend_config

      - name: Verify outputs
        run: |
          if [[ "${{ steps.backend_config_file_12.outputs.test }}" != "hello" ]]; then
            echo "::error:: output from backend_config file not set correctly"
            exit 1
          fi

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/apply/backend_config_12
          backend_config: bucket=terraform-github-actions,key=backend_config,region=eu-west-2

      - name: Apply
        uses: ./terraform-apply
        id: backend_config_12
        with:
          path: tests/apply/backend_config_12
          backend_config: bucket=terraform-github-actions,key=backend_config,region=eu-west-2

      - name: Verify outputs
        run: |
          if [[ "${{ steps.backend_config_12.outputs.test }}" != "hello" ]]; then
            echo "::error:: Output from backend_config not set correctly"
            exit 1
          fi

  backend_config_13:
    runs-on: ubuntu-latest
    name: backend_config & backed_config_vars
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/apply/backend_config_13
          backend_config_file: tests/apply/backend_config_13/backend_config

      - name: Apply
        uses: ./terraform-apply
        id: backend_config_file_13
        with:
          path: tests/apply/backend_config_13
          backend_config_file: tests/apply/backend_config_13/backend_config

      - name: Verify outputs
        run: |
          if [[ "${{ steps.backend_config_file_13.outputs.test }}" != "hello" ]]; then
            echo "::error:: output from backend_config file not set correctly"
            exit 1
          fi

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/apply/backend_config_13
          backend_config: bucket=terraform-github-actions,key=backend_config_13,region=eu-west-2

      - name: Apply
        uses: ./terraform-apply
        id: backend_config_13
        with:
          path: tests/apply/backend_config_13
          backend_config: bucket=terraform-github-actions,key=backend_config_13,region=eu-west-2

      - name: Verify outputs
        run: |
          if [[ "${{ steps.backend_config_13.outputs.test }}" != "hello" ]]; then
            echo "::error:: Output from backend_config not set correctly"
            exit 1
          fi

  apply_label:
    runs-on: ubuntu-latest
    name: Apply approved with a variable and label
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/apply/vars
          label: TestLabel
          var: my_var=world
          var_file: tests/apply/test.tfvars

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/apply/vars
          label: TestLabel
          var: my_var=world
          var_file: tests/apply/test.tfvars

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.output_string }}" != "the_string" ]]; then
            echo "::error:: output s not set correctly"
            exit 1
          fi

  apply_changes_already_applied:
    runs-on: ubuntu-latest
    name: Apply when changes are already applied
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs:
      - apply
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/apply/changes

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.output_string }}" != "the_string" ]]; then
            echo "::error:: output s not set correctly"
            exit 1
          fi

  apply_no_changes:
    runs-on: ubuntu-latest
    name: Apply when there are no planned changes
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/remote-state/test-bucket_12

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.my_string }}" != "hello" ]]; then
            echo "::error:: output my_string not set correctly"
            exit 1
          fi

  apply_no_plan:
    runs-on: ubuntu-latest
    name: Apply when there is no approved plan
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Apply
        uses: ./terraform-apply
        id: apply
        continue-on-error: true
        with:
          path: tests/apply/no_plan

      - name: Check failed to apply
        run: |
          if [[ "${{ steps.apply.outcome }}" != "failure" ]]; then
            echo "Apply did not fail correctly"
            exit 1
          fi
