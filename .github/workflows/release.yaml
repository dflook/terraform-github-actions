name: Release

on:
  release:
    types:
      - released

jobs:
  image:
    runs-on: ubuntu-latest
    name: Release Actions
    env:
      GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Registry login
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          echo $GITHUB_TOKEN | docker login ghcr.io -u dflook --password-stdin
          echo $DOCKER_TOKEN | docker login --username danielflook --password-stdin

      - name: Build action image
        id: image_build
        run: |
          RELEASE_TAG="${{ github.event.release.tag_name }}"

          docker pull --quiet danielflook/terraform-github-actions-base:latest
          BASE_DIGEST="$(docker image inspect --format="{{index .RepoDigests 0}}" "danielflook/terraform-github-actions-base:latest" | sed 's/.*@//')"

          docker build --tag dflook/terraform-github-actions \
            --label org.opencontainers.image.created="$(date '+%Y-%m-%dT%H:%M:%S%z')" \
            --label org.opencontainers.image.source="https://github.com/${{ github.repository }}" \
            --label org.opencontainers.image.revision="${{ github.sha }}" \
            --label org.opencontainers.image.base.name="docker.io/danielflook/terraform-github-actions-base:latest" \
            --label org.opencontainers.image.base.digest="$BASE_DIGEST" \
            --label build="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            image

          docker tag dflook/terraform-github-actions ghcr.io/dflook/terraform-github-actions:$RELEASE_TAG
          docker push --quiet ghcr.io/dflook/terraform-github-actions:$RELEASE_TAG

          docker tag dflook/terraform-github-actions danielflook/terraform-github-actions:$RELEASE_TAG
          docker push --quiet danielflook/terraform-github-actions:$RELEASE_TAG

          echo "::set-output name=digest::$(docker image inspect --format="{{index .RepoDigests 0}}" "danielflook/terraform-github-actions:$RELEASE_TAG")"

      - name: Release actions
        run: |
          export RELEASE_TAG="${{ github.event.release.tag_name }}"
          export major=`echo $RELEASE_TAG | cut -d. -f1`
          export minor=`echo $RELEASE_TAG | cut -d. -f2`

          git config --global user.name "Daniel Flook"
          git config --global user.email "daniel@flook.org"

          for action in $(cd $GITHUB_WORKSPACE && find . -name action.yaml -printf "%h\n" | sed 's/^.\///'); do

            if git clone https://dflook:$GITHUB_TOKEN@github.com/dflook/$action.git "$HOME/$action"; then
              echo "Releasing dflook/$action@$RELEASE_TAG"

              rsync -r $GITHUB_WORKSPACE/$action/ $HOME/$action

              sed -i "s|../image/Dockerfile|docker://${{ steps.image_build.outputs.digest }}|" $HOME/$action/action.yaml

              git -C "$HOME/$action" add -A
              git -C "$HOME/$action" commit -m "$RELEASE_TAG"
              git -C "$HOME/$action" tag --force -a -m"$RELEASE_TAG" "$RELEASE_TAG"
              git -C "$HOME/$action" tag --force -a -m"$RELEASE_TAG" "$major"
              git -C "$HOME/$action" tag --force -a -m"$RELEASE_TAG" "$major.$minor"
              git -C "$HOME/$action" push --force
              git -C "$HOME/$action" push --force --tags

              cat $GITHUB_WORKSPACE/.github/release_template.md \
               | envsubst \
               | jq --slurp --raw-input --arg RELEASE_TAG "$RELEASE_TAG" '{"tag_name": $RELEASE_TAG, "name": $RELEASE_TAG, "body": . }' \
               | curl -X POST \
                   --user dflook:$GITHUB_TOKEN \
                   --header "Content-Type: application/json" \
                   --data-binary @- \
                   "https://api.github.com/repos/dflook/$action/releases"

            else
              echo "Skipping $action"
            fi
          done
